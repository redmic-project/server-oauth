version: '3.5'

services:
  oauth:
    image: ${IMAGE_NAME:-registry.gitlab.com/redmic-project/server/oauth}:${IMAGE_TAG:-latest}
    build:
      context: ..
      dockerfile: ${DOCKERFILE:-Dockerfile}
      args:
        PARENT_IMAGE_NAME:
        PARENT_IMAGE_TAG:
        MICROSERVICE_NAME:
        MICROSERVICE_PORT:
    environment:
      MICROSERVICE_NAME:
      MICROSERVICE_PORT:
      SPRING_DATASOURCE_USERNAME:
      SPRING_DATASOURCE_PASSWORD:
      SPRING_DATASOURCE_URL:
      JAVA_OPTS: -XX:MaxRAMFraction=2
    networks:
      postgres-net:
      redmic-net:
      traefik-net:
    healthcheck:
      test: wget --spider -q http://localhost:${MICROSERVICE_PORT}/api/${MICROSERVICE_NAME}/actuator/health
      interval: ${HEALTHCHECK_INTERVAL:-30s}
      timeout: ${HEALTHCHECK_TIMEOUT:-10s}
      retries: ${HEALTHCHECK_RETRIES:-3}
      start_period: ${HEALTHCHECK_START_PERIOD:-2m}
    deploy:
      mode: replicated
      replicas: ${REPLICAS:-1}
      labels:
        traefik.enable: 'true'

        traefik.http.routers.redmic-oauth.entrypoints: ${TRAEFIK_ENTRYPOINT}
        traefik.http.routers.redmic-oauth.rule: (Host(`${PUBLIC_HOSTNAME}`) || Host(`${TRAEFIK_SUBDOMAIN}.${PUBLIC_HOSTNAME}`)) && PathPrefix(`/api/${MICROSERVICE_NAME}`)

        traefik.http.services.redmic-oauth.loadbalancer.server.port: ${MICROSERVICE_PORT}
      restart_policy:
        delay: ${RESTART_DELAY:-1m}
      update_config:
        delay: ${UPDATE_DELAY:-2m}

networks:
  postgres-net:
    name: ${POSTGRES_NET_NAME:-postgres-net}
    driver: ${POSTGRES_NET_DRIVER:-overlay}
    external: true

  redmic-net:
    name: ${REDMIC_NET_NAME:-redmic-net}
    driver: ${REDMIC_NET_DRIVER:-overlay}
    attachable: ${REDMIC_NET_ATTACHABLE:-true}

  traefik-net:
    name: ${TRAEFIK_NET_NAME:-traefik-net}
    driver: ${TRAEFIK_NET_DRIVER:-overlay}
    external: true
